---
import Layout from '../layouts/Layout.astro';
---

<Layout title="TTS">
	<main class="flex flex-col justify-center items-center">
		<form action="" id="form" class="flex justify-center flex-col w-1/3 align-middle">
			<textarea name="text" id="ta" cols="30" rows="10" class="rounded"></textarea>
			<div id="sliders" class="flex flex-col my-4">
				<label for="pitch">
					Pitch : <span id="pitchVal">.3</span>
				</label>
				<input type="range" min="0" max="2" id="pitch" step="0.01" value=".3" />
				<label for="rate">
					Rate : <span id="rateVal">3.95</span>
				</label>
				<input type="range" min="0" max="10" id="rate" step="0.01" value="3.95" />
				<label for="volume">
					Volume : <span id="volVal">1</span>
				</label>
				<input type="range" min="0" max="1" id="volume" step="0.01" value="1" />
			</div>
			<button id="read" class="w-full text-xl rounded-md font-bold bg-emerald-200 p-3 mt-3"
				>Read</button
			>
		</form>
		<article>
			<p id="current"></p>
		</article>
	</main>
</Layout>

<script>
	const button = document.getElementById('read');
	const textarea = document.getElementById('ta') as HTMLInputElement;
	const current = document.getElementById('current');
	const pitch = document.getElementById('pitch') as HTMLInputElement;
	const rate = document.getElementById('rate') as HTMLInputElement;
	const volume = document.getElementById('volume') as HTMLInputElement;
	pitch.addEventListener('input', () => {
		const p = document.getElementById('pitchVal') as HTMLInputElement;
		p.innerText = pitch.value;
	});

	rate.addEventListener('input', () => {
		const r = document.getElementById('rateVal') as HTMLInputElement;
		r.innerText = rate.value;
	});

	volume.addEventListener('input', () => {
		const v = document.getElementById('volVal') as HTMLInputElement;
		v.innerText = volume.value;
	});

	const msg = new SpeechSynthesisUtterance();
	const synth = window.speechSynthesis;

	if (button && textarea && current) {
		button.addEventListener('click', (e) => {
			e.preventDefault();
			msg.pitch = parseFloat(pitch.value);
			msg.rate = parseFloat(rate.value);
			msg.volume = parseFloat(volume.value);
			if (textarea?.value.trim() !== '') {
				msg.text = textarea.value;
				current.style.display = 'block';
			} else {
				current.style.display = 'none';
			}

			window.speechSynthesis.cancel();

			if (synth.getVoices()[1]) {
				msg.voice = synth.getVoices()[1] ?? null;
				synth.speak(msg);
			} else {
				window.speechSynthesis.speak(msg);
			}
			current.innerText = textarea.value;
			msg.text = '';
			textarea.value = '';
		});

		let countEnters = 0;

		textarea.addEventListener('keyup', (e) => {
			e.preventDefault();
			if (e.key === 'Enter') {
				countEnters++;
				if (countEnters > 3) {
					button.click();
					countEnters = 0;
				}
			} else {
				countEnters = 0;
			}
		});
	}
</script>
